<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.ibm.cloud</groupId>
  <artifactId>ibm-key-protect-sdk</artifactId>
  <packaging>jar</packaging>  
  <!-- This should be changed to 99-SNAPSHOT and should never need to change after that. -->
  <version>99-SNAPSHOT</version>

  <name>IBM Cloud Key Protect Java SDK</name>
  <description>Java Client Library to access the IBM Cloud Key Protect</description>
  <url>https://github.com/IBM/keyprotect-java-client</url>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <organization>
    <name>IBM Cloud</name>
  </organization>

  <developers>
    <developer>
      <name>Mathew Odden</name>
      <email>mrodden@us.ibm.com</email>
      <url>https://github.com/mrodden</url>
    </developer>
    <developer>
      <name>Varinder Singh</name>
      <email>varinder.singh.grewal@ibm.com</email>
      <url>https://www.ibm.com/</url>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:https://github.com/IBM/keyprotect-java-client.git</connection>
    <developerConnection>scm:git:https://github.com/IBM/keyprotect-java-client.git</developerConnection>
    <url>https://github.com/IBM/keyprotect-java-client</url>
  </scm>

  <issueManagement>
    <system>Github</system>
    <url>https://github.com/IBM/keyprotect-java-client/issues</url>
  </issueManagement>

  <ciManagement>
    <system>Travis-CI</system>
    <url>https://travis.ibm.com/IBM/keyprotect-java-client</url>
  </ciManagement>

  <repositories>
    <!-- these definitions are useful only for internal SDK projects -->
    <repository>
      <id>na-artifactory-ibmcloud-sdks</id>
      <url>https://na.artifactory.swg-devops.com:443/artifactory/wcp-ibmcloud-sdks-team-maven-local/</url>
    </repository>
  </repositories>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <git-repository-name>keyprotect-java-client</git-repository-name>

    <!-- version props -->
    <sdk-core-version>9.17.3</sdk-core-version>
    <testng-version>7.7.0</testng-version>
    <okhttp3-version>4.10.0</okhttp3-version>
    <surefire-version>3.0.0-M7</surefire-version>
    <maven-deploy-plugin-version>3.0.0</maven-deploy-plugin-version>
    <maven-source-plugin-version>3.2.1</maven-source-plugin-version>
    <maven-shade-plugin-version>3.3.0</maven-shade-plugin-version>
    <maven-jar-plugin-version>3.2.2</maven-jar-plugin-version>
    <maven-javadoc-plugin-version>3.4.1</maven-javadoc-plugin-version>
    <maven-compiler-plugin-version>3.10.1</maven-compiler-plugin-version>
    <maven-site-plugin-version>3.12.1</maven-site-plugin-version>
    <maven-checkstyle-plugin-version>3.2.0</maven-checkstyle-plugin-version>
    <checkstyle-version>8.41</checkstyle-version>
    <maven-failsafe-plugin-version>3.0.0-M7</maven-failsafe-plugin-version>
    <maven-reports-plugin-version>3.4.1</maven-reports-plugin-version>
    <maven-buildnumber-plugin-version>3.0.0</maven-buildnumber-plugin-version>
    <powermock-version>2.0.9</powermock-version>
    <mockito-version>3.2.4</mockito-version>
    <nexus-staging-plugin-version>1.6.13</nexus-staging-plugin-version>
    <maven-gpg-plugin-version>3.0.1</maven-gpg-plugin-version>
    <slf4j-version>2.0.0</slf4j-version>
    <jacoco-plugin-version>0.8.8</jacoco-plugin-version>
    <ic-rc-version>0.19.2</ic-rc-version>
    <gson-version>2.9.1</gson-version>
    <slf4j-version>1.7.12</slf4j-version>
    <javax-json-version>1.0</javax-json-version>
    <glassfish-version>1.0.4</glassfish-version>    

    <!-- versions of transitive dependencies we need to override to avoid vulnerability alerts -->
    <junit-version>4.13.2</junit-version>
  </properties>

  <dependencies>
    <!-- This is the Java core dependency -->
    <dependency>
      <groupId>com.ibm.cloud</groupId>
      <artifactId>sdk-core</artifactId>
      <version>${sdk-core-version}</version>
    </dependency>
    <dependency>
      <groupId>com.ibm.cloud</groupId>
      <artifactId>resource-controller</artifactId>
      <version>${ic-rc-version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>${gson-version}</version>
    </dependency>
    <!-- TestNG is used to run unit/integration tests -->
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>${testng-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
      <version>${okhttp3-version}</version>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>mockwebserver</artifactId>
      <version>${okhttp3-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito2</artifactId>
      <version>${powermock-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-testng</artifactId>
      <version>${powermock-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j-version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j-version}</version>
    </dependency>
    <dependency>
      <groupId>javax.json</groupId>
      <artifactId>javax.json-api</artifactId>
      <version>${javax-json-version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.json</artifactId>
      <version>${glassfish-version}</version>
    </dependency>
  </dependencies>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin-version}</version>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>${nexus-staging-plugin-version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${maven-gpg-plugin-version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin-version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin-version}</version>
          <configuration>
            <quiet>true</quiet>
          </configuration>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin-version}</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin-version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven-checkstyle-plugin-version}</version>
          <executions>
            <execution>
              <id>verify-style</id>
              <phase>test</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <failsOnError>true</failsOnError>
            <configLocation>checkstyle.xml</configLocation>
            <consoleOutput>true</consoleOutput>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-plugin-version}</version>
          <executions>
            <execution>
              <id>prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>report</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <systemPropertyVariables>
              <jacoco-agent.destfile>${project.build.directory}</jacoco-agent.destfile>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-failsafe-plugin-version}</version>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <skipITs>true</skipITs>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>${maven-buildnumber-plugin-version}</version>
          <executions>
            <execution>
              <phase>validate</phase>
              <goals>
                <goal>create</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
            <shortRevisionLength>8</shortRevisionLength>
            <timestampFormat>{0,date,yyyyMMdd-HHmmss}</timestampFormat>
            <attach>true</attach>
            <addOutputDirectoryToResources>true</addOutputDirectoryToResources>
            <doCheck>false</doCheck>
            <doUpdate>false</doUpdate>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin-version}</version>
          <configuration>
            <archive>
              <manifestEntries>
                <Build-Time>${maven.build.timestamp}</Build-Time>
              </manifestEntries>
              <manifestSections>
                <manifestSection>
                  <name>Implementation</name>
                  <manifestEntries>
                    <Implementation-Title>${project.name}</Implementation-Title>
                    <Implementation-Vendor>IBM Corporation</Implementation-Vendor>
                    <Implementation-Version>${project.version}</Implementation-Version>
                    <Implementation-SCM-Revision>${buildNumber}</Implementation-SCM-Revision>
                    <Implementation-SCM-Branch>${scmBranch}</Implementation-SCM-Branch>
                  </manifestEntries>
                </manifestSection>
              </manifestSections>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven-shade-plugin-version}</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- Disable default maven-deploy-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <!-- plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.7</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>false</autoReleaseAfterClose>
        </configuration>
      </plugin -->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <show>public</show>
          <doctitle>${project.name}, version ${project.version}</doctitle>
          <footer>IBM Corporation</footer>
          <source>8</source>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-version}</version>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.5</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- When using java 9+ we need to use the "add-opens" jvm option to allow powermock to do its thing -->
      <id>java9plus</id>
      <activation>
        <jdk>[9,)</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-version}</version>
            <configuration>
              <skipTests>${skip.unit.tests}</skipTests>
              <argLine>--add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED</argLine>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- "central" is used to deploy artifacts on maven central -->
    <profile>
      <id>central</id>

      <!-- For this profile, we'll get dependencies from maven central -->
      <repositories></repositories>

      <distributionManagement>
        <snapshotRepository>
          <!-- We don't deploy snapshot releases -->
        </snapshotRepository>
        <repository>
          <!-- This is where the nexus staging plugin will publish artifacts -->
          <id>ossrh</id>
          <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
      </distributionManagement>

      <build>
        <plugins>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
              <keepStagingRepositoryOnCloseRuleFailure>true</keepStagingRepositoryOnCloseRuleFailure>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <gpgArguments>
                <arg>--batch</arg>
                <arg>--pinentry-mode</arg>
                <arg>loopback</arg>
              </gpgArguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <properties>
        <!-- Configure the gpg plugin to use the env vars defined in the Travis build settings -->
        <gpg.keyname>${env.GPG_KEYNAME}</gpg.keyname>
        <gpg.passphrase>${env.GPG_PASSPHRASE}</gpg.passphrase>
      </properties>
    </profile>

  </profiles>
</project>